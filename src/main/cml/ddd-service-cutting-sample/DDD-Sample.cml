/**
 * The CargoTracking context contains the domain model of the DDD Sample application with all its Aggregates:
 */
BoundedContext CargoTracking {
	Aggregate Cargo {
        owner CargoPlaner

		Entity Cargo {
			aggregateRoot
			- TrackingId trackingId
			- Location origin
			- RouteSpecification routeSpecification
			- Itinerary itinerary
			- Delivery delivery
		}
		ValueObject TrackingId {
			String id
		}
		ValueObject RouteSpecification {
			- Location origin
			- Location destination
			Date arrivalDeadline
		}
		ValueObject Delivery {
			- TransportStatus transportStatus
			- Location lastKnownLocation
			- Voyage currentVoyage
			boolean misdirected
			Date eta
			Date estimatedArrivalTime
			- HandlingActivity nextExpectedActivity
			boolean isUnloadedAtDestination
			- RoutingStatus routingStatus
			Date calculatedAt
			- HandlingEvent lastEvent
		}
		ValueObject HandlingActivity {
			Type handlingActivityType
			- Location location
			- Voyage voyage
		}
		ValueObject Itinerary {
			- List<Leg> legs
		}
		ValueObject Leg {
			- Voyage voyage
			- Location loadLocation
			- Location unloadLocation
			Date loadTime
			Date unloadTime
		}
		enum RoutingStatus {
			NOT_ROUTED, ROUTED, MISROUTED;
		}
		enum TransportStatus {
			NOT_RECEIVED, IN_PORT, ONBOARD_CARRIER, CLAIMED, UNKNOWN;
		}
	}
	Aggregate Location {
        owner Administrators

		Entity Location {
			aggregateRoot
			- UnLocode unLocode
			String name
		}
		ValueObject UnLocode {
			String unlocode
		}
	}
	Aggregate Handling {
        owner CargoTracker

		DomainEvent HandlingEvent {
			- HandlingEventType handlingEventType
			- Voyage voyage
			- Location location
			Date completionTime
			Date registrationTime
			- Cargo cargo
		}
		enum HandlingEventType {
			LOAD, UNLOAD, RECEIVE, CLAIM, CUSTOMS
		}
		ValueObject HandlingHistory {
			- List<HandlingEvent> handlingEvents
		}
	}
	Aggregate Voyage {
        owner VoyageManager

		Entity Voyage {
			aggregateRoot
			- VoyageNumber voyageNumber
			- Schedule schedule
		}
		ValueObject CarrierMovement {
			- Location departureLocation
			- Location arrivalLocation
			Date departureTime
			Date arrivalTime
		}
		ValueObject Schedule {
			- List<CarrierMovement> carrierMovements
		}
		ValueObject VoyageNumber {
			String number
		}
	}
}

BoundedContext CargoPlaner { type TEAM }
BoundedContext CargoTracker { type TEAM }
BoundedContext VoyageManager { type TEAM }
BoundedContext Administrators { type TEAM }

/* Use Cases (taken from Service Cutter examples) */
UseCase ViewTracking {
    reads "Cargo.trackingId", "HandlingEvent.handlingEventType", "HandlingEvent.location", "HandlingEvent.completionTime", "Delivery.transportStatus", "Delivery.estimatedArrivalTime", "Delivery.misdirected", "Voyage.voyageNumber", "RouteSpecification.destination"
}

UseCase ViewCargos {
    reads "Cargo.trackingId", "RouteSpecification.destination", "RouteSpecification.arrivalDeadline", "Delivery.routingStatus"
}

UseCase BookCargo {
    reads "Location.unLocode"
    writes "Cargo.trackingId", "RouteSpecification.origin", "RouteSpecification.arrivalDeadline", "RouteSpecification.destination"
}

UseCase ChangeCargoDestination {
    reads "Cargo.trackingId", "RouteSpecification.destination"
    writes "RouteSpecification.destination"
}

UseCase RouteCargo {
    reads "Cargo.trackingId", "RouteSpecification.destination", "RouteSpecification.origin", "RouteSpecification.arrivalDeadline", "Location.unLocode", "Voyage.voyageNumber", "CarrierMovement.departureLocation", "CarrierMovement.arrivalLocation", "CarrierMovement.departureTime", "CarrierMovement.arrivalTime"
    writes "Leg.loadLocation", "Leg.unloadLocation", "Leg.loadTime", "Leg.unloadTime"
}

UseCase CreateLocation {
    writes "Location.unLocode", "Location.name"
}

UseCase CreateVoyage {
    writes "Voyage.voyageNumber"
}

UseCase AddCarrierMovement {
    reads "Voyage.voyageNumber"
    writes "CarrierMovement.departureLocation", "CarrierMovement.arrivalLocation", "CarrierMovement.departureTime", "CarrierMovement.arrivalTime"
}

UseCase HandleCargoEvent {
    reads "Voyage.voyageNumber", "Cargo.trackingId"
    writes "HandlingEvent.handlingEventType", "HandlingEvent.completionTime", "HandlingEvent.registrationTime", "HandlingEvent.location", "Delivery.transportStatus", "Delivery.misdirected", "Delivery.estimatedArrivalTime", "Delivery.isUnloadedAtDestination", "Delivery.routingStatus"
}
