/**
 * A reverse engineered (https://github.com/ContextMapper/context-map-discovery) 
 * and manually adjusted Context Map of the Lakeside Mutual microservice project:
 * https://github.com/Microservice-API-Patterns/LakesideMutual
 * 
 * Note: The discovery library currently one detects the Upstream-Downstream
 * relationships without additional patterns such as OHS, PL, ect. 
 * These patterns are manually added here: 
 */
ContextMap LakesideMutual {
	contains CustomerCore, CustomerManagement, CustomerSelfService
	contains PolicyManagement, ClaimsManagement

	CustomerCore [OHS, PL]-> CustomerManagement {
		exposedAggregates cities, CustomerCore_customers
	}

	CustomerCore [OHS, PL]->[CF] CustomerSelfService {
		exposedAggregates cities, CustomerCore_customers
	}

	CustomerCore [OHS, PL]->[ACL] PolicyManagement {
		exposedAggregates cities, CustomerCore_customers
	}

	PolicyManagement -> CustomerSelfService {
		exposedAggregates insurance_quote_requests, customers, riskfactor, policies
	}

	CustomerCore [OHS, PL]-> ClaimsManagement {
		exposedAggregates CustomerCore_customers
	}

	PolicyManagement -> ClaimsManagement {
		exposedAggregates policies, riskfactor
	}

}

/**
 * The 'Claims Management' context below is a result of our Event Storming for the new
 * claim processing feature. See ./images/claim-processing-event-storming-result.jpg.
 * 
 * Issue: We currently modeled the feature within a new Bounded Context, although it 
 * would also be possible to implement it as part of the Policy Management Context. 
 */
BoundedContext ClaimsManagement {
	domainVisionStatement "This Bounded Context manages the processing of claims ..."
	
	Aggregate Claims {
		Entity Claim {
			aggregateRoot
			long claimId
			- CustomerId customer
			String description
			Blob requestDocument
			boolean isComplete
			boolean isAssessed
			- ClaimState claimState
		}
	
		enum ClaimState {
			OPEN, REJECTED, ACCEPTED
		}
	
		abstract DomainEvent AbstractClaimEvent {
			Date timestamp
			- Claim claim
		}

		abstract CommandEvent AbstractClaimCommand {
			- Claim claim
		}
	
		CommandEvent CheckClaimDocumentation extends @AbstractClaimCommand
	
		DomainEvent ClaimRegistered extends @AbstractClaimEvent // triggers CheckInsurance command
	
		CommandEvent CheckInsurance extends @AbstractClaimCommand {
			- Set<PolicyId> policies
		}
		
		DomainEvent AssessmentPerformed extends @AbstractClaimEvent // triggers AcceptClaim or RejectClaim command depending on result
	
		CommandEvent AcceptClaim extends @AbstractClaimCommand
		
		DomainEvent ClaimAccepted extends @AbstractClaimEvent // triggers SchedulePayment command
	
		CommandEvent RejectClaim extends @AbstractClaimCommand
		
		DomainEvent ClaimRejected extends @AbstractClaimEvent // triggers NofifyCustomer command
	
		Service ClaimService {
			@ClaimRegistered checkDocumentation(@CheckClaimDocumentation command);
			
			@AssessmentPerformed checkInsurance(@CheckInsurance command);
			
			@AcceptClaim acceptClaim(@AcceptClaim command);
			
			@RejectClaim rejectClaim(@RejectClaim commandcal);
		}
	}
	
	Aggregate Payment {
		Entity Payment {
			aggregateRoot
			
			- Claim claim
			- PaymentState paymentState
		}
		
		enum PaymentState {
			SCHEDULED, PERFORMED
		}
		
		abstract CommandEvent AbstractNotificationCommand {
			- Payment payment
		}
		
		abstract DomainEvent AbstractNotificationEvent {
			Date timestamp
			- Payment payment
		}
		
		CommandEvent SchedulePayment extends @AbstractNotificationCommand
		
		DomainEvent PaymentScheduled extends @AbstractNotificationEvent // triggers PerformPayment command
		
		CommandEvent PerformPayment extends @AbstractNotificationCommand
		
		DomainEvent PaymentPerformed extends @AbstractNotificationEvent // triggers NofifyCustomer command
		
		Service PaymentService {
			@PaymentScheduled schedulePayment(@SchedulePayment command);
			
			@PaymentPerformed performPayment(@PerformPayment command);
		}
	}
	
	Aggregate Notification {
		Entity Notification {
			aggregateRoot
			
			- Claim claim
		}
		
		CommandEvent NofifyCustomer
		
		DomainEvent CustomerNotified {
			Date timestamp
		}
		
		Service NotificationService {
			@CustomerNotified notifyCustomer(@NofifyCustomer command);
		}
	}
}

/**
 * The following Bounded Contexts are reverse engineered with our discovery library
 * (https://github.com/ContextMapper/context-map-discovery): 
 */
BoundedContext PolicyManagement {
	implementationTechnology "Spring Boot"
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.policymanagement.interfaces.InsuranceQuoteRequestInformationHolder.
	Aggregate insurance_quote_requests {
		// This value object has been derived from the class com.lakesidemutual.policymanagement.interfaces.dtos.insurancequoterequest.InsuranceQuoteRequestDto.
		ValueObject InsuranceQuoteRequestDto {
			List<RequestStatusChangeDto> statusHistory
			String policyId
			InsuranceOptionsDto insuranceOptions
			CustomerInfoDto customerInfo
			Long id
			InsuranceQuoteDto insuranceQuote
			Date date
		}
		Entity insurance_quote_requests_RootEntity {
			aggregateRoot
			* List<@InsuranceQuoteRequestDto> getInsuranceQuoteRequests;
			* @InsuranceQuoteRequestDto getInsuranceQuoteRequest;
		}
	}
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.policymanagement.interfaces.CustomerInformationHolder.
	Aggregate customers {
		// This value object has been derived from the class com.lakesidemutual.policymanagement.interfaces.dtos.customer.CustomerIdDto.
		ValueObject CustomerIdDto {
			String id
		}
		Entity customers_RootEntity {
			aggregateRoot
			* @CustomerDto getCustomer (@CustomerIdDto customerIdDto);
			* List<@customers_PolicyDto> getPolicies (@CustomerIdDto customerIdDto);
			* @PaginatedCustomerResponseDto getCustomers;
		}
		// This value object has been derived from the class com.lakesidemutual.policymanagement.interfaces.dtos.customer.CustomerDto.
		ValueObject CustomerDto {
			String customerId
			CustomerProfileDto customerProfile
			List<Link> links
		}
		// This value object has been derived from the class com.lakesidemutual.policymanagement.interfaces.dtos.policy.PolicyDto.
		ValueObject customers_PolicyDto {
			Object customer
			Date creationDate
			String policyType
			InsuringAgreementDto insuringAgreement
			MoneyAmountDto insurancePremium
			List<Link> links
			MoneyAmountDto policyLimit
			PolicyPeriodDto policyPeriod
			String policyId
			MoneyAmountDto deductible
			List<String> expandable
		}
		// This value object has been derived from the class com.lakesidemutual.policymanagement.interfaces.dtos.customer.PaginatedCustomerResponseDto.
		ValueObject PaginatedCustomerResponseDto {
			int offset
			int ^size
			String filter
			int limit
			List<Link> links
			- List<CustomerDto> customers
		}
	}
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.policymanagement.interfaces.RiskComputationService.
	Aggregate riskfactor {
		Entity riskfactor_RootEntity {
			aggregateRoot
		}
	}
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.policymanagement.interfaces.PolicyInformationHolder.
	Aggregate policies {
		// This value object has been derived from the class com.lakesidemutual.policymanagement.interfaces.dtos.policy.PolicyDto.
		ValueObject PolicyDto {
			MoneyAmountDto insurancePremium
			List<String> expandable
			String policyId
			String policyType
			MoneyAmountDto deductible
			List<Link> links
			MoneyAmountDto policyLimit
			PolicyPeriodDto policyPeriod
			InsuringAgreementDto insuringAgreement
			Date creationDate
			Object customer
		}
		// This value object has been derived from the class com.lakesidemutual.policymanagement.interfaces.dtos.policy.CreatePolicyRequestDto.
		ValueObject CreatePolicyRequestDto {
			MoneyAmountDto insurancePremium
			InsuringAgreementDto insuringAgreement
			MoneyAmountDto policyLimit
			PolicyPeriodDto policyPeriod
			String customerId
			String policyType
			MoneyAmountDto deductible
		}
		Entity policies_RootEntity {
			aggregateRoot
			* @PolicyDto getPolicy (@PolicyId policyId);
			* @PolicyDto updatePolicy (@CreatePolicyRequestDto createPolicyDto, @PolicyId policyId);
			* @PaginatedPolicyResponseDto getPolicies;
		}
		// This value object has been derived from the class com.lakesidemutual.policymanagement.interfaces.dtos.policy.PaginatedPolicyResponseDto.
		ValueObject PaginatedPolicyResponseDto {
			int limit
			List<Link> links
			int offset
			int ^size
			- List<PolicyDto> policies
		}
		// This value object has been derived from the class com.lakesidemutual.policymanagement.domain.policy.PolicyId.
		ValueObject PolicyId {
			long serialVersionUID
			String id
		}
	}
}

BoundedContext CustomerManagement {
	implementationTechnology "Spring Boot"
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.customermanagement.interfaces.CustomerInformationHolder.
	Aggregate CustomerManagement_customers {
		// This value object has been derived from the class com.lakesidemutual.customermanagement.interfaces.dtos.PaginatedCustomerResponseDto.
		ValueObject CustomerManagement_customers_PaginatedCustomerResponseDto {
			String filter
			int ^size
			int offset
			List<Link> links
			int limit
			- List<CustomerManagement_customers_CustomerDto> customers
		}
		// This value object has been derived from the class com.lakesidemutual.customermanagement.interfaces.dtos.CustomerDto.
		ValueObject CustomerManagement_customers_CustomerDto {
			List<Link> links
			String customerId
			- CustomerProfileDto customerProfile
		}
		// This value object has been derived from the class com.lakesidemutual.customermanagement.interfaces.dtos.CustomerProfileDto.
		ValueObject CustomerProfileDto {
			List<AddressDto> moveHistory
			String firstname
			String phoneNumber
			Date birthday
			String lastname
			String ^email
			AddressDto currentAddress
		}
		Entity CustomerManagement_customers_RootEntity {
			aggregateRoot
			* @CustomerManagement_customers_PaginatedCustomerResponseDto getCustomers;
			* @CustomerManagement_customers_CustomerDto getCustomer (@CustomerManagement_customers_CustomerId customerId);
			* @CustomerManagement_customers_CustomerDto updateCustomer (@CustomerManagement_customers_CustomerId customerId, @CustomerProfileDto customerProfile);
		}
		// This value object has been derived from the class com.lakesidemutual.customermanagement.domain.customer.CustomerId.
		ValueObject CustomerManagement_customers_CustomerId {
			long serialVersionUID
			String id
		}
	}
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.customermanagement.interfaces.NotificationInformationHolder.
	Aggregate notifications {
		Entity notifications_RootEntity {
			aggregateRoot
			* List<@NotificationDto> getNotifications;
		}
		// This value object has been derived from the class com.lakesidemutual.customermanagement.interfaces.dtos.NotificationDto.
		ValueObject NotificationDto {
			int count
			String customerId
			String username
		}
	}
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.customermanagement.interfaces.InteractionLogInformationHolder.
	Aggregate interaction_logs {
		// This value object has been derived from the class com.lakesidemutual.customermanagement.domain.customer.CustomerId.
		ValueObject interaction_logs_CustomerId {
			long serialVersionUID
			String id
		}
		// This value object has been derived from the class com.lakesidemutual.customermanagement.domain.interactionlog.InteractionLogAggregateRoot.
		ValueObject InteractionLogAggregateRoot {
			String customerId
			String lastAcknowledgedInteractionId
			String username
			Collection<InteractionEntity> interactions
		}
		Entity interaction_logs_RootEntity {
			aggregateRoot
			* @InteractionLogAggregateRoot getInteractionLog (@interaction_logs_CustomerId customerId);
		}
	}
}

BoundedContext CustomerSelfService {
	implementationTechnology "Spring Boot"
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.customerselfservice.interfaces.AuthenticationController.
	Aggregate auth {
		Entity auth_RootEntity {
			aggregateRoot
		}
	}
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.customerselfservice.interfaces.InsuranceQuoteRequestInformationHolder.
	Aggregate CustomerSelfService_insurance_quote_requests {
		// This value object has been derived from the class com.lakesidemutual.customerselfservice.interfaces.dtos.insurancequoterequest.InsuranceQuoteRequestDto.
		ValueObject CustomerSelfService_insurance_quote_requests_InsuranceQuoteRequestDto {
			List<RequestStatusChangeDto> statusHistory
			Long id
			Date date
			InsuranceQuoteDto insuranceQuote
			InsuranceOptionsDto insuranceOptions
			CustomerInfoDto customerInfo
			String policyId
		}
		Entity CustomerSelfService_insurance_quote_requests_RootEntity {
			aggregateRoot
			* @CustomerSelfService_insurance_quote_requests_InsuranceQuoteRequestDto getInsuranceQuoteRequest;
			* List<@CustomerSelfService_insurance_quote_requests_InsuranceQuoteRequestDto> getInsuranceQuoteRequests;
		}
	}
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.customerselfservice.interfaces.CityStaticDataHolder.
	Aggregate CustomerSelfService_cities {
		// This value object has been derived from the class com.lakesidemutual.customerselfservice.interfaces.dtos.city.CitiesResponseDto.
		ValueObject CustomerSelfService_cities_CitiesResponseDto {
			List<String> cities
		}
		Entity CustomerSelfService_cities_RootEntity {
			aggregateRoot
			* @CustomerSelfService_cities_CitiesResponseDto getCitiesForPostalCode;
		}
	}
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.customerselfservice.interfaces.UserInformationHolder.
	Aggregate user {
		Entity user_RootEntity {
			aggregateRoot
			* @UserResponseDto getCurrentUser;
		}
		// This value object has been derived from the class com.lakesidemutual.customerselfservice.interfaces.dtos.identityaccess.UserResponseDto.
		ValueObject UserResponseDto {
			String ^email
			String customerId
		}
	}
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.customerselfservice.interfaces.CustomerInformationHolder.
	Aggregate CustomerSelfService_customers {
		// This value object has been derived from the class com.lakesidemutual.customerselfservice.interfaces.dtos.insurancequoterequest.InsuranceQuoteRequestDto.
		ValueObject CustomerSelfService_customers_InsuranceQuoteRequestDto {
			String policyId
			List<RequestStatusChangeDto> statusHistory
			CustomerInfoDto customerInfo
			InsuranceOptionsDto insuranceOptions
			Long id
			InsuranceQuoteDto insuranceQuote
			Date date
		}
		// This value object has been derived from the class com.lakesidemutual.customerselfservice.interfaces.dtos.customer.CustomerDto.
		ValueObject CustomerSelfService_customers_CustomerDto {
			String customerId
			List<Link> links
			CustomerProfileDto customerProfile
		}
		// This value object has been derived from the class com.lakesidemutual.customerselfservice.domain.customer.CustomerId.
		ValueObject CustomerSelfService_customers_CustomerId {
			String id
			long serialVersionUID
		}
		Entity CustomerSelfService_customers_RootEntity {
			aggregateRoot
			* @CustomerSelfService_customers_AddressDto changeAddress (@CustomerSelfService_customers_CustomerId customerId, @CustomerSelfService_customers_AddressDto requestDto);
			* @CustomerSelfService_customers_CustomerDto getCustomer (@CustomerSelfService_customers_CustomerId customerId);
			* List<@CustomerSelfService_customers_InsuranceQuoteRequestDto> getInsuranceQuoteRequests (@CustomerSelfService_customers_CustomerId customerId);
		}
		// This value object has been derived from the class com.lakesidemutual.customerselfservice.interfaces.dtos.customer.AddressDto.
		ValueObject CustomerSelfService_customers_AddressDto {
			String streetAddress
			String city
			String postalCode
		}
	}
}

BoundedContext CustomerCore {
	implementationTechnology "Spring Boot"
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.customercore.interfaces.CityStaticDataHolder.
	Aggregate cities {
		Entity cities_RootEntity {
			aggregateRoot
			* @CitiesResponseDto getCitiesForPostalCode;
		}
		// This value object has been derived from the class com.lakesidemutual.customercore.interfaces.dtos.city.CitiesResponseDto.
		ValueObject CitiesResponseDto {
			List<String> cities
		}
	}
	// This Aggregate has been created on the basis of the RESTful HTTP controller com.lakesidemutual.customercore.interfaces.CustomerInformationHolder.
	Aggregate CustomerCore_customers {
		// This value object has been derived from the class com.lakesidemutual.customercore.interfaces.dtos.customer.AddressDto.
		ValueObject AddressDto {
			String streetAddress
			String city
			String postalCode
		}
		// This value object has been derived from the class com.lakesidemutual.customercore.domain.customer.CustomerId.
		ValueObject CustomerId {
			String id
			long serialVersionUID
		}
		Entity CustomerCore_customers_RootEntity {
			aggregateRoot
			* @CustomerResponseDto updateCustomer (@CustomerProfileUpdateRequestDto requestDto, @CustomerId customerId);
			* @CustomersResponseDto getCustomer;
			* @AddressDto changeAddress (@CustomerId customerId, @AddressDto requestDto);
			* @CustomerCore_customers_PaginatedCustomerResponseDto getCustomers;
		}
		// This value object has been derived from the class com.lakesidemutual.customercore.interfaces.dtos.customer.CustomerProfileUpdateRequestDto.
		ValueObject CustomerProfileUpdateRequestDto {
			String lastname
			Date birthday
			String phoneNumber
			String streetAddress
			String city
			String ^email
			String postalCode
			String firstname
		}
		// This value object has been derived from the class com.lakesidemutual.customercore.interfaces.dtos.customer.CustomerResponseDto.
		ValueObject CustomerResponseDto {
			String phoneNumber
			String lastname
			String streetAddress
			Collection<Address> moveHistory
			String firstname
			String ^email
			String city
			String postalCode
			Date birthday
			String customerId
			List<Link> links
		}
		// This value object has been derived from the class com.lakesidemutual.customercore.interfaces.dtos.customer.CustomersResponseDto.
		ValueObject CustomersResponseDto {
			List<Link> links
			- List<CustomerResponseDto> customers
		}
		// This value object has been derived from the class com.lakesidemutual.customercore.interfaces.dtos.customer.PaginatedCustomerResponseDto.
		ValueObject CustomerCore_customers_PaginatedCustomerResponseDto {
			List<Link> links
			String filter
			int limit
			int offset
			int ^size
			- List<CustomerResponseDto> customers
		}
	}
}

