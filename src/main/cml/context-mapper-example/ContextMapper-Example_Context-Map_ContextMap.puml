@startuml
skinparam componentStyle uml2

component [LanguageCore]
note top of [LanguageCore]
Provides the Context Mapper DSL 
(CML) modeling language to express 
architectures on the basis of 
Strategic Domain-driven Design 
(DDD) patterns. 
end note

component [ArchitecturalRefactorings]
note bottom of [ArchitecturalRefactorings]
Architectural Refactorings (ARs) 
allow to improve the architecture 
model iteratively. 
end note

component [ServiceCutterAnalysis]
note bottom of [ServiceCutterAnalysis]
The Service Cutter integration 
into Context Mapper allows to 
analyze the Context Map with respect 
to coupling criteria and supports 
to suggest improved Context Maps. 

end note

component [ReverseEngineeringLibrary]
note right of [ReverseEngineeringLibrary]
The reverse engineering component 
can generate CML Context Maps 
from existing source code. This 
allows to reverse engineer the 
architecture model in projects 
with existing monoliths or microservices. 

end note

component [Generators]
note right of [Generators]
The generators allow to generate 
other representations of the architecture 
derived by a given CML Context 
Map. 
end note

interface "Upstream-Downstream" as ReverseEngineeringLibrary_to_LanguageCore
[LanguageCore] -up-> ReverseEngineeringLibrary_to_LanguageCore : PUBLISHED_LANGUAGE
[ReverseEngineeringLibrary] ..> ReverseEngineeringLibrary_to_LanguageCore : use as CONFORMIST

[ArchitecturalRefactorings] <-> [LanguageCore] : Shared Kernel

interface "Upstream-Downstream" as ServiceCutterAnalysis_to_LanguageCore
[LanguageCore] -right-> ServiceCutterAnalysis_to_LanguageCore : PUBLISHED_LANGUAGE
ServiceCutterAnalysis_to_LanguageCore <. [ServiceCutterAnalysis] : use 

interface "Upstream-Downstream" as Generators_to_LanguageCore
[LanguageCore] -down-> Generators_to_LanguageCore : PUBLISHED_LANGUAGE
Generators_to_LanguageCore <.. [Generators] : use
@enduml