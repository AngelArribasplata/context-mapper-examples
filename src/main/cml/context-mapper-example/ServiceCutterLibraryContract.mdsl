API description ServiceCutterLibraryAPI
usage context PUBLIC_API for BACKEND_INTEGRATION

// input model (Entity Relation Diagram & User Representations)
data type EntityRelationshipDiagram { "name":V<string>, "entities":{ "name":V<string>, "nanoentities":V<string>* }*, "relations":{ "origin":{ "name":V<string>, "nanoentities":V<string>* }, "destination":{ "name":V<string>, "nanoentities":V<string>* }, "relationType":RelationType }* }
data type UserRepresentations { "useCases":{ "name":V<string>, "nanoentitiesRead":V<string>*, "nanoentitiesWritten":V<string>*, "latencyCritical":V<bool> }*, "compatibilities":{ "contentVolatility":{ "characteristic":V<string>, "nanoentities":V<string>* }*, "structuralVolatility":{ "characteristic":V<string>, "nanoentities":V<string>* }*, "availabilityCriticality":{ "characteristic":V<string>, "nanoentities":V<string>* }*, "consistencyCriticality":{ "characteristic":V<string>, "nanoentities":V<string>* }*, "storageSimilarity":{ "characteristic":V<string>, "nanoentities":V<string>* }*, "securityCriticality":{ "characteristic":V<string>, "nanoentities":V<string>* }* }* }
data type RelationType { "AGGREGATION" | "COMPOSITION" | "INHERITANCE" }

// Service cutting context built by input and coupling criteria
data type ServiceCutterContext { "systemName":V<string>, "criteriaCatalog":CouplingCriteriaCatalog, "couplingInstances":CouplingInstance*, "nanoEntities":V<string>*, "solverConfiguration":SolverConfiguration }
data type CouplingCriteriaCatalog P // not specified in detail due to complexity
data type CouplingInstance P // not specified in detail due to complexity

// Solver configuration provided by user (algorithm and priorities)
data type SolverConfiguration { "algorithm":V<string>, "solverPriorities":{ "criterion":V<string>, "priority":SolverPriority }* }
data type SolverPriority { "IGNORE" | "XS" | "S" | "M" | "L" | "XL" | "XXL" }

// Cutting result provided by Service Cutter
data type SolverResult { "services":{ "nanoentities":V<string>*, "id":char }*, "relations":{ "serviceA":V<string>, "serviceB":V<string>, "sharedEntities":V<string>*, "direction":Direction }* }
data type Direction { "OUTGOING" | "INCOMING" | "BIDIRECTIONAL" }
data type char P // no char primitive type in MDSL

endpoint type ServiceCutterContextBuilder // stateful type
	exposes
		operation ServiceCutterContextBuilder // constructor
			expecting
				payload EntityRelationshipDiagram
		operation withUserRepresentations // provide user representations (optionally)
			expecting
				payload UserRepresentations
		operation withCustomSolverConfiguration // change solver configuration (optionally)
			expecting
				payload SolverConfiguration
		operation build // build the context
			delivering
				payload ServiceCutterContext

endpoint type SolverConfigurationFactory
	exposes
		operation createDefaultConfiguration // create initial/default solver configuration
			delivering
				payload SolverConfiguration

endpoint type ServiceCutter
	exposes
		operation generateDecomposition // decompose the system with the provided context
			expecting
				payload ServiceCutterContext
			delivering
				payload SolverResult


API provider ServiceCutterLibrary
	offers ServiceCutterContextBuilder
	offers SolverConfigurationFactory
	offers ServiceCutter

API client LanguageCore
	consumes ServiceCutterContextBuilder
	consumes SolverConfigurationFactory
	consumes ServiceCutter

IPA